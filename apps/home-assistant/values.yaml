app-template:
  controllers:
    main:
      annotations:
        reloader.stakater.com/auto: "true"
      replicas: 1
      # HA is not supported
      strategy: Recreate
      containers:
        main:
          image:
            repository: ghcr.io/onedr0p/home-assistant
            tag: 2023.10.5@sha256:24ce89830111fe19bb2df00621dfd631fd20abe07a453ea60c2027890d5b934e

          env:
            TZ: Europe/Madrid
            POSTGRES_USER:
              valueFrom:
                secretKeyRef:
                  name: home-assistant.home-assistant-postgres.credentials.postgresql.acid.zalan.do
                  key: username
            POSTGRES_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: home-assistant.home-assistant-postgres.credentials.postgresql.acid.zalan.do
                  key: password
            ZZ_DB_URL: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@home-assistant-postgres/home_assistant"
          probes:
            liveness:
              enabled: false
            readiness:
              enabled: false
            startup:
              enabled: false

          resources:
            requests:
              cpu: 100m
              memory: 350Mi
            limits:
              memory: 1Gi
        codeserver:
          image:
            repository: ghcr.io/coder/code-server
            tag: 4.17.1
          env:
            TZ: Europe/Madrid
          workingDir: /config
          args:
            - --auth
            - "none"
            - --user-data-dir
            - "/config/.vscode"
            - --extensions-dir
            - "/config/.vscode"

  defaultPodOptions:
    enableServiceLinks: false

    securityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"

  service:
    main:
      ports:
        http:
          port: 8123
        codeserver:
          port: 8080
  ingress:
    main:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: grigri.cloud
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
      hosts:
        - host: &host hass.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http
      tls:
        - hosts:
            - *host
          secretName: home-assistant-external-tls-certificate
    code-server:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: grigri.cloud
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        nginx.ingress.kubernetes.io/auth-url: https://auth.grigri.cloud/oauth2/auth
        nginx.ingress.kubernetes.io/auth-signin: https://auth.grigri.cloud/oauth2/start
      hosts:
        - host: &host hass-code.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: codeserver
      tls:
        - hosts:
            - *host
          secretName: home-assistant-code-external-tls-certificate

  persistence:
    config:
      enabled: true
      globalMounts:
        - path: /config
      existingClaim: home-assistant-config-zfs
    configmap:
      enabled: true
      globalMounts:
        - path: /config/gitops
      type: configMap
      name: home-assistant-config
    configmap-integrations:
      enabled: true
      globalMounts:
        - path: /config/gitops/integrations
      type: configMap
      name: home-assistant-config-integrations

  serviceMonitor:
    main:
      enabled: true
      endpoints:
        - port: http
          scheme: http
          path: /api/prometheus
