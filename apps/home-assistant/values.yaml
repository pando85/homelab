app-template:
  controllers:
    hass:
      labels:
        backup/retain: quaterly
      annotations:
        reloader.stakater.com/auto: "true"
      type: statefulset
      replicas: 1
      containers:
        hass:
          image:
            repository: ghcr.io/home-operations/home-assistant
            tag: 2025.3.3@sha256:911d89f0c6dfa54c3cc0d79bc538796259e3374fe561f2cfdbc728822bf016d7
          env:
            TZ: Europe/Madrid
            POSTGRES_USER:
              valueFrom:
                secretKeyRef:
                  name: home-assistant.home-assistant-postgres.credentials.postgresql.acid.zalan.do
                  key: username
            POSTGRES_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: home-assistant.home-assistant-postgres.credentials.postgresql.acid.zalan.do
                  key: password
            ZZ_DB_URL: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@home-assistant-postgres/home_assistant"
            OPENAI_BASE_URL: http://open-webui.open-webui.svc/api/
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
              spec:
                failureThreshold: 30
                periodSeconds: 5

          resources:
            requests:
              cpu: 10m
              memory: 350Mi
            limits:
              memory: 1Gi

    appdaemon:
      annotations:
        reloader.stakater.com/auto: "true"
      type: deployment
      replicas: 1
      initContainers:
        01-init-config:
          image:
            repository: debian
            tag: 12.9-slim
          command:
            - /bin/sh
            - -c
          args:
            - >
              cp -r /original/conf/* /conf/
      containers:
        appdaemon:
          image:
            repository: acockburn/appdaemon
            tag: 4.4.2
          env:
            HA_URL: http://home-assistant-hass:8123
            DASH_URL: https://appdaemon.grigri.cloud
            TIMEZONE: Europe/Madrid
          envFrom:
            - secretRef:
                name: hass-appdaemon
          resources:
            requests:
              cpu: 30m
              memory: 50Mi
            limits:
              memory: 200Mi
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
              spec:
                failureThreshold: 30
                periodSeconds: 5
      pod:
        affinity: &affinity
          podAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - home-assistant
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - hass
                topologyKey: kubernetes.io/hostname

    whisper:
      type: deployment
      replicas: 1
      pod:
        runtimeClassName: nvidia
        labels:
          pod-cleaner.dbcloud.org/watch: "true"
      containers:
        whisper:
          image:
            # https://github.com/pando85/wyoming-addons/tree/master/whisper
            repository: pando85/wyoming-whisper
            tag: 2.4.0
          args:
            - --model
            - large-v3-turbo
            - --language
            - es
            - --device
            - cuda
            - --compute-type
            - int8
          resources:
            requests:
              cpu: 15m
              memory: 600Mi
            limits:
              nvidia.com/gpu: "1"
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
              spec:
                failureThreshold: 30
                periodSeconds: 5
    piper:
      type: deployment
      replicas: 1
      containers:
        piper:
          image:
            repository: rhasspy/wyoming-piper
            tag: 1.5.0
          args:
            - --voice
            #- en_US-amy-medium
            - es_ES-sharvard-medium
          resources:
            requests:
              cpu: 15m
              memory: 150Mi
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
              spec:
                failureThreshold: 30
                periodSeconds: 5
      pod:
        affinity: *affinity

    openwakeword:
      type: deployment
      replicas: 1
      containers:
        openwakeword:
          image:
            repository: rhasspy/wyoming-openwakeword
            tag: 1.10.0
          args:
            - --preload-model
            - alexa
          resources:
            requests:
              cpu: 15m
              memory: 150Mi
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
              spec:
                failureThreshold: 30
                periodSeconds: 5
      pod:
        affinity: *affinity

    valetudopng:
      annotations:
        reloader.stakater.com/auto: "true"
      type: deployment
      replicas: 1
      containers:
        valetudopng:
          image:
            repository: ghcr.io/erkexzcx/valetudopng
            tag: v1.0.17
          args:
            - -config
            - /config/config.yml
          resources:
            requests:
              cpu: 15m
              memory: 15Mi
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
              spec:
                failureThreshold: 30
                periodSeconds: 5
      pod:
        affinity: *affinity
  defaultPodOptions:
    terminationGracePeriodSeconds: 1

    securityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"

  service:
    hass:
      controller: hass
      ports:
        http:
          port: 8123
    appdaemon:
      controller: appdaemon
      ports:
        http:
          port: 80
    whisper:
      controller: whisper
      ports:
        http:
          port: 10300
    piper:
      controller: piper
      ports:
        http:
          port: 10200
    openwakeword:
      controller: openwakeword
      ports:
        http:
          port: 10400
    valetudopng:
      controller: valetudopng
      ports:
        http:
          port: 3000

  ingress:
    hass:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: grigri.cloud
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
      hosts:
        - host: &host hass.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: hass
                port: http
      tls:
        - hosts:
            - *host
          secretName: home-assistant-external-tls-certificate
    appdaemon:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: grigri.cloud
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        nginx.ingress.kubernetes.io/auth-url: https://auth.grigri.cloud/oauth2/auth?allowed_groups=appdaemon-users@idm.grigri.cloud
        nginx.ingress.kubernetes.io/auth-signin: https://auth.grigri.cloud/oauth2/start
        nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
      hosts:
        - host: &host appdaemon.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: appdaemon
                port: http
      tls:
        - hosts:
            - *host
          secretName: hass-appdaemon-tls-certificate
    valetudopng:
      enabled: true
      className: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        external-dns.alpha.kubernetes.io/enabled: "true"
      hosts:
        - host: &host valetudopng.internal.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: valetudopng
                port: http
      tls:
        - hosts:
            - *host
          secretName: hass-valetudopng-tls-certificate

  persistence:
    config:
      enabled: true
      existingClaim: home-assistant-config
      advancedMounts:
        hass:
          hass:
            - path: /config
    configmap:
      enabled: true
      type: configMap
      name: home-assistant-config
      advancedMounts:
        hass:
          hass:
            - path: /config/gitops
    secret:
      enabled: true
      type: secret
      name: hass-secrets
      advancedMounts:
        hass:
          hass:
            - path: /config/gitops/secrets
    configmap-integrations:
      enabled: true
      type: configMap
      name: home-assistant-config-integrations
      advancedMounts:
        hass:
          hass:
            - path: /config/gitops/integrations
    configmap-script:
      enabled: true
      type: configMap
      name: home-assistant-config-script
      advancedMounts:
        hass:
          hass:
            - path: /config/gitops/script
    appdaemon:
      enabled: true
      type: configMap
      name: hass-appdaemon
      advancedMounts:
        appdaemon:
          01-init-config:
            - path: /original/conf
    appdaemon-apps:
      enabled: true
      type: configMap
      name: hass-appdaemon-apps
      advancedMounts:
        appdaemon:
          01-init-config:
            - path: /original/conf/apps
    appdaemon-cache:
      type: emptyDir
      advancedMounts:
        appdaemon:
          01-init-config:
            - path: /conf
          appdaemon:
            - path: /conf
    whisper:
      enabled: true
      existingClaim: home-assistant-models
      advancedMounts:
        whisper:
          whisper:
            - path: /data
    piper:
      enabled: true
      type: emptyDir
      sizeLimit: 5Gi
      advancedMounts:
        piper:
          piper:
            - path: /data
    valetudopng:
      enabled: true
      type: secret
      name: valetudopng-config
      advancedMounts:
        valetudopng:
          valetudopng:
            - path: /config
  serviceMonitor:
    hass:
      enabled: true
      # if directory != service name, it will be prefixed to the service name:
      # ${directory}-${service}
      # https://github.com/bjw-s/helm-charts/blob/45ec2d739fc787c95947e0f3d68b05e54fe5f077/charts/library/common/templates/lib/service/_valuesToObject.tpl#L20
      serviceName: home-assistant-hass
      labels:
        operator.prometheus.io/instance: prometheus-long-term
      endpoints:
        - port: http
          scheme: http
          path: /api/prometheus
