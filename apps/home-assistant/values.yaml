app-template:
  controllers:
    main:
      annotations:
        reloader.stakater.com/auto: "true"
      type: statefulset
      replicas: 1
      containers:
        main:
          image:
            repository: ghcr.io/onedr0p/home-assistant
            tag: 2024.2.2@sha256:ae49effa87ce9ac033a2503612ca341361bf9f1a6f972a538d995c675fb9ad9d
          env:
            TZ: Europe/Madrid
            POSTGRES_USER:
              valueFrom:
                secretKeyRef:
                  name: home-assistant.home-assistant-postgres.credentials.postgresql.acid.zalan.do
                  key: username
            POSTGRES_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: home-assistant.home-assistant-postgres.credentials.postgresql.acid.zalan.do
                  key: password
            ZZ_DB_URL: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@home-assistant-postgres/home_assistant"
          probes:
            liveness:
              enabled: false
            readiness:
              enabled: false
            startup:
              enabled: false

          resources:
            requests:
              cpu: 10m
              memory: 350Mi
            limits:
              memory: 1Gi

    appdaemon:
      annotations:
        reloader.stakater.com/auto: "true"
      type: deployment
      replicas: 1
      initContainers:
        01-init-config:
          image:
            repository: debian
            tag: 12.5-slim
          command:
            - /bin/sh
            - -c
          args:
            - >
              cp -r /original/conf/* /conf/
      containers:
        main:
          image:
            repository: acockburn/appdaemon
            tag: 4.4.2
          env:
            HA_URL: http://home-assistant:8123
            DASH_URL: https://appdaemon.grigri.cloud
            TIMEZONE: Europe/Madrid
          envFrom:
            - secretRef:
                name: hass-appdaemon
          resources:
            requests:
              cpu: 30m
              memory: 50Mi
            limits:
              memory: 200Mi
      pod:
        affinity: &affinity
          podAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - home-assistant
                topologyKey: kubernetes.io/hostname

    whisper:
      type: deployment
      replicas: 1
      pod:
        runtimeClassName: nvidia
      containers:
        main:
          image:
            repository: pando85/wyoming-whisper
            tag: 1.1.0
          args:
            - --model
            - medium-int8
            - --language
            - es
            - --device
            - cuda
          resources:
            requests:
              cpu: 15m
              memory: 600Mi
            limits:
              nvidia.com/gpu: "1"
    piper:
      type: deployment
      replicas: 1
      containers:
        main:
          image:
            repository: rhasspy/wyoming-piper
            tag: 1.4.0
          args:
            - --voice
            #- en_US-amy-medium
            - es_ES-sharvard-medium
          resources:
            requests:
              cpu: 15m
              memory: 150Mi
      pod:
        affinity: *affinity

    openwakeword:
      type: deployment
      replicas: 1
      containers:
        main:
          image:
            repository: rhasspy/wyoming-openwakeword
            tag: 1.10.0
          args:
            - --preload-model
            - alexa
          resources:
            requests:
              cpu: 15m
              memory: 150Mi
      pod:
        affinity: *affinity

    valetudopng:
      annotations:
        reloader.stakater.com/auto: "true"
      type: deployment
      replicas: 1
      containers:
        main:
          image:
            repository: ghcr.io/erkexzcx/valetudopng
            tag: v1.0.16
          args:
            - -config
            - /config/config.yml
          resources:
            requests:
              cpu: 15m
              memory: 15Mi

  defaultPodOptions:
    enableServiceLinks: false
    terminationGracePeriodSeconds: "1"

    securityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"

  service:
    main:
      ports:
        http:
          port: 8123
    appdaemon:
      controller: appdaemon
      ports:
        http:
          port: 80
    whisper:
      controller: whisper
      ports:
        http:
          port: 10300
    piper:
      controller: piper
      ports:
        http:
          port: 10200
    openwakeword:
      controller: openwakeword
      ports:
        http:
          port: 10400
    valetudopng:
      controller: valetudopng
      ports:
        http:
          port: 3000

  ingress:
    main:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: grigri.cloud
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
      hosts:
        - host: &host hass.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http
      tls:
        - hosts:
            - *host
          secretName: home-assistant-external-tls-certificate
    appdaemon:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: grigri.cloud
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        nginx.ingress.kubernetes.io/auth-url: https://auth.grigri.cloud/oauth2/auth
        nginx.ingress.kubernetes.io/auth-signin: https://auth.grigri.cloud/oauth2/start
      hosts:
        - host: &host appdaemon.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                name: appdaemon
                port: http
      tls:
        - hosts:
            - *host
          secretName: hass-appdaemon-tls-certificate
    valetudopng:
      enabled: true
      className: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        external-dns.alpha.kubernetes.io/enabled: "true"
      hosts:
        - host: &host valetudopng.internal.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                name: valetudopng
                port: http
      tls:
        - hosts:
            - *host
          secretName: hass-valetudopng-tls-certificate

  persistence:
    config:
      enabled: true
      existingClaim: home-assistant-config-zfs
      advancedMounts:
        main:
          main:
            - path: /config
    configmap:
      enabled: true
      type: configMap
      name: home-assistant-config
      advancedMounts:
        main:
          main:
            - path: /config/gitops
    secret:
      enabled: true
      type: secret
      name: hass-secrets
      advancedMounts:
        main:
          main:
            - path: /config/gitops/secrets
    configmap-integrations:
      enabled: true
      type: configMap
      name: home-assistant-config-integrations
      advancedMounts:
        main:
          main:
            - path: /config/gitops/integrations
    configmap-script:
      enabled: true
      type: configMap
      name: home-assistant-config-script
      advancedMounts:
        main:
          main:
            - path: /config/gitops/script
    appdaemon:
      enabled: true
      type: configMap
      name: hass-appdaemon
      advancedMounts:
        appdaemon:
          01-init-config:
            - path: /original/conf
    appdaemon-apps:
      enabled: true
      type: configMap
      name: hass-appdaemon-apps
      advancedMounts:
        appdaemon:
          01-init-config:
            - path: /original/conf/apps
    appdaemon-cache:
      type: emptyDir
      advancedMounts:
        appdaemon:
          01-init-config:
            - path: /conf
          main:
            - path: /conf
    whisper:
      enabled: true
      type: emptyDir
      sizeLimit: 5Gi
      advancedMounts:
        whisper:
          main:
            - path: /data
    piper:
      enabled: true
      type: emptyDir
      sizeLimit: 5Gi
      advancedMounts:
        piper:
          main:
            - path: /data
    valetudopng:
      enabled: true
      type: secret
      name: valetudopng-config
      advancedMounts:
        valetudopng:
          main:
            - path: /config
  serviceMonitor:
    main:
      enabled: true
      labels:
        operator.prometheus.io/instance: prometheus-long-term
      endpoints:
        - port: http
          scheme: http
          path: /api/prometheus
