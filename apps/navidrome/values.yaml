app-template:
  controllers:
    navidrome:
      labels:
        backup/retain: quaterly
      replicas: 1
      # HA is not supported
      strategy: Recreate
      containers:
        navidrome:
          image:
            repository: deluan/navidrome
            tag: 0.57.0

          env:
            ND_REVERSEPROXYUSERHEADER: "X-Auth-Request-Preferred-Username"
            ND_REVERSEPROXYWHITELIST: "10.0.0.0/8"
            ND_SCANSCHEDULE: 1h
            ND_LOGLEVEL: info
            ND_SESSIONTIMEOUT: 24h
            ND_DATAFOLDER: /data
            ND_MUSICFOLDER: /music
            ND_AUTOIMPORTPLAYLISTS: "true"
            ND_PROMETHEUS_ENABLED: "true"
          envFrom:
            - secretRef:
                name: navidrome-secret

          resources:
            requests:
              cpu: 10m
              memory: 256Mi
            limits:
              memory: 2Gi
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
              spec:
                failureThreshold: 30
                periodSeconds: 5

  service:
    navidrome:
      controller: navidrome
      ports:
        http:
          port: 4533
  ingress:
    navidrome:
      enabled: true
      className: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        external-dns.alpha.kubernetes.io/enabled: "true"
        nginx.ingress.kubernetes.io/auth-url: https://auth.grigri.cloud/oauth2/auth?allowed_groups=navidrome-users@idm.grigri.cloud
        nginx.ingress.kubernetes.io/auth-signin: https://auth.grigri.cloud/oauth2/start
        nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-Preferred-Username"
        nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
        # Enable subsonic client
        nginx.ingress.kubernetes.io/auth-snippet: |
            if ( $request_uri ~ "/rest" ) {
                return 200;
            }
      hosts:
        - host: &host navidrome.internal.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: navidrome
                port: http
      tls:
        - hosts:
            - *host
          secretName: navidrome-tls-certificate

    external:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: grigri.cloud
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        nginx.ingress.kubernetes.io/auth-url: https://auth.grigri.cloud/oauth2/auth?allowed_groups=navidrome-users@idm.grigri.cloud
        nginx.ingress.kubernetes.io/auth-signin: https://auth.grigri.cloud/oauth2/start
        nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-Preferred-Username"
        nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"

        # Enable subsonic client
        nginx.ingress.kubernetes.io/auth-snippet: |
            if ( $request_uri ~ "/rest" ) {
                return 200;
            }
      hosts:
        - host: &host navidrome.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: navidrome
                port: http
      tls:
        - hosts:
            - *host
          secretName: navidrome-external-tls-certificate

  defaultPodOptions:
    securityContext:
      runAsUser: 995
      runAsGroup: 501
      fsGroup: 501
      fsGroupChangePolicy: "OnRootMismatch"

  persistence:
    # music with backups
    music:
      enabled: true
      globalMounts:
        - path: /music
      existingClaim: music-navidrome
    # music from Lidarr
    lidarr:
      enabled: true
      type: hostPath
      hostPath: /datasets/musica
      globalMounts:
        - path: /music/lidarr

    data:
      enabled: true
      globalMounts:
        - path: /data
      existingClaim: data-navidrome

  serviceMonitor:
    navidrome:
      enabled: true
      # if directory != service name, it will be prefixed to the service name:
      # ${directory}-${service}
      # https://github.com/bjw-s/helm-charts/blob/45ec2d739fc787c95947e0f3d68b05e54fe5f077/charts/library/common/templates/lib/service/_valuesToObject.tpl#L20
      serviceName: navidrome
      labels:
        operator.prometheus.io/instance: prometheus-long-term
      endpoints:
        - port: http
          scheme: http
          path: /metrics
          interval: 1m
          scrapeTimeout: 10s
