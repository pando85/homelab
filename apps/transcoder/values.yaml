app-template:
  controllers:
    transcoder:
      labels:
        backup/retain: quaterly
      annotations:
        reloader.stakater.com/auto: "true"
      type: statefulset
      containers:
        transcoder:
          image:
            repository: ghcr.io/pando85/gearr
            tag: "0.1.11-server"

          probes:
            liveness: &probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /-/healthy
                  port: &port 8080
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness: *probes
            startup:
              enabled: true
          env:
            TZ: Europe/Madrid
            CONFIG_PATH: /etc/transcoder/config.yaml
            DATABASE_USER:
              valueFrom:
                secretKeyRef:
                  name: transcoder.transcoder-postgres.credentials.postgresql.acid.zalan.do
                  key: username
            DATABASE_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: transcoder.transcoder-postgres.credentials.postgresql.acid.zalan.do
                  key: password
          resources:
            requests:
              cpu: 10m
              memory: 200Mi
            limits:
              memory: 400Mi
    rabbit:
      type: statefulset
      containers:
        rabbitmq:
          image:
            repository: rabbitmq
            tag: 4.1.3
          probes:
            liveness: &probes
              enabled: true
              custom: true
              spec:
                tcpSocket:
                  port: &port_rabbit 5672
                periodSeconds: 30
                timeoutSeconds: 3
            readiness: *probes
            startup:
              enabled: true
              custom: true
              spec:
                tcpSocket:
                  port: *port_rabbit
                failureThreshold: 90
          env:
            RABBITMQ_DEFAULT_USER:
              valueFrom:
                secretKeyRef:
                  name: rabbit-credentials
                  key: username
            RABBITMQ_DEFAULT_PASS:
              valueFrom:
                secretKeyRef:
                  name: rabbit-credentials
                  key: password
          resources:
            requests:
              cpu: 10m
              memory: 200Mi
            limits:
              memory: 2Gi
  service:
    transcoder:
      controller: transcoder
      ports:
        http:
          port: *port
    rabbit:
      controller: rabbit
      type: LoadBalancer
      annotations:
        lbipam.cilium.io/ips: "192.168.193.3"
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/hostname: transcoder-rabbit.internal.grigri.cloud
      externalTrafficPolicy: Local
      ports:
        tcp-clients:
          enabled: true
          protocol: TCP
          port: *port_rabbit
          targetPort: *port_rabbit

  ingress:
    transcoder:
      enabled: true
      className: nginx-internal
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-body-size: 20G
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
      hosts:
        - host: &host transcoder.internal.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: transcoder
                port: http
      tls:
        - hosts:
            - *host
          secretName: transcoder-tls-certificate

  defaultPodOptions:
    securityContext:
      runAsUser: 995
      runAsGroup: 501
      fsGroup: 501
      fsGroupChangePolicy: "OnRootMismatch"

  persistence:
    config:
      enabled: true
      type: secret
      name: transcoder-config
      advancedMounts:
        transcoder:
          transcoder:
            - path: /etc/transcoder/
    series:
      enabled: true
      type: hostPath
      hostPath: /datasets/series
      advancedMounts:
        transcoder:
          transcoder:
            - path: /datasets/series
    peliculas:
      enabled: true
      type: hostPath
      hostPath: /datasets/peliculas
      advancedMounts:
        transcoder:
          transcoder:
            - path: /datasets/peliculas
    transcode:
      enabled: true
      type: emptyDir
      advancedMounts:
        transcoder:
          transcoder:
            - path: /tmp
    # TODO: don't start on prusik -> Not enough space on node
    rabbit:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 1Gi
      advancedMounts:
        rabbit:
          rabbitmq:
            - path: /var/lib/rabbitmq
