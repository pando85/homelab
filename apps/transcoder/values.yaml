app-template:
  controllers:
    main:
      annotations:
        reloader.stakater.com/auto: "true"
      type: statefulset
      containers:
        main:
          image:
            repository: pando85/transcoder
            tag: '1343b82-server'

          probes:
            liveness: &probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /-/healthy
                  port: &port 8080
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness: *probes
            startup:
              enabled: true
          env:
            TZ: Europe/Madrid
            DATABASE_USER:
              valueFrom:
                secretKeyRef:
                  name: transcoder.transcoder-postgres.credentials.postgresql.acid.zalan.do
                  key: username
            DATABASE_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: transcoder.transcoder-postgres.credentials.postgresql.acid.zalan.do
                  key: password
          resources:
            requests:
              cpu: 10m
              memory: 200Mi
            limits:
              memory: 400Mi
    rabbit:
      type: statefulset
      containers:
        main:
          image:
            repository: rabbitmq
            tag: 3.12.12
          probes:
            liveness: &probes
              enabled: true
              custom: true
              spec:
                tcpSocket:
                  port: &port_rabbit 5672
            readiness: *probes
            startup: *probes
          env:
            RABBITMQ_DEFAULT_USER:
              valueFrom:
                secretKeyRef:
                  name: rabbit-credentials
                  key: username
            RABBITMQ_DEFAULT_PASS:
              valueFrom:
                secretKeyRef:
                  name: rabbit-credentials
                  key: password
          resources:
            requests:
              cpu: 10m
              memory: 200Mi
            limits:
              memory: 200Mi
  service:
    main:
      ports:
        http:
          port: *port
    rabbit:
      controller: rabbit
      type: LoadBalancer
      externalTrafficPolicy: Local
      annotations:
        metallb.universe.tf/loadBalancerIPs: "192.168.193.3"
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/hostname: transcoder-rabbit.internal.grigri.cloud
      ports:
        tcp-clients:
          enabled: true
          protocol: TCP
          port: *port_rabbit
          targetPort: *port_rabbit

  ingress:
    main:
      enabled: true
      className: nginx-internal
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-body-size: 20G
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
      hosts:
        - host: &host transcorder.internal.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http
      tls:
        - hosts:
            - *host
          secretName: transcorder-tls-certificate

  defaultPodOptions:
    securityContext:
      runAsUser: 995
      runAsGroup: 991
      fsGroup: 991
      fsGroupChangePolicy: "OnRootMismatch"

    nodeSelector:
      name: grigri

  persistence:
    config:
      enabled: true
      type: secret
      name: transcoder-config
      advancedMounts:
        main:
          main:
            - path: /etc/transcoderd/
    # series:
    #   enabled: true
    #   type: hostPath
    #   hostPath: /datasets/series
    #   advancedMounts:
    #     main:
    #       main:
    #         - path: /datasets/series
    # peliculas:
    #   enabled: true
    #   type: hostPath
    #   hostPath: /datasets/peliculas
    #   advancedMounts:
    #     main:
    #       main:
    #         - path: /datasets/peliculas

    peliculas:
      enabled: true
      type: hostPath
      hostPath: '/datasets/peliculas/The Expendables 3 (2014)'
      advancedMounts:
        main:
          main:
            - path: '/datasets/peliculas/The Expendables 3 (2014)'
    transcode:
      enabled: true
      type: emptyDir
      advancedMounts:
        main:
          main:
            - path: /tmp
