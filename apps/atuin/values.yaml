app-template:
  controllers:
    atuin:
      labels:
        backup/retain: quaterly
      type: statefulset
      containers:
        atuin:
          image:
            repository: ghcr.io/atuinsh/atuin
            tag: 18.4.0
          env:
            ATUIN_HOST: 0.0.0.0
            ATUIN_PORT: &port 8080
            ATUIN_OPEN_REGISTRATION: "false"
            ATUIN_METRICS__ENABLE: "true"
            ATUIN_METRICS__HOST: 0.0.0.0
            ATUIN_METRICS__PORT: &metricsPort 9090
            ATUIN_TLS__ENABLE: "false"
            RUST_LOG: info
          envFrom:
            - secretRef:
                name: atuin-database
          args:
            - server
            - start
          probes:
            liveness: &probes
              enabled: true
              custom: true
              spec:
                httpGet: &httpGet
                  path: /
                  port: *port
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness: *probes
            startup:
              enabled: true
              custom: true
              spec:
                httpGet: *httpGet
                failureThreshold: 30
                periodSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - "ALL"
          resources:
            requests:
              cpu: 10m
            limits:
              memory: 256Mi
      pod:
        affinity:
          podAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: cluster-name
                      operator: In
                      values:
                        - atuin-postgres
                topologyKey: kubernetes.io/hostname
  service:
    atuin:
      controller: atuin
      ports:
        http:
          port: *port
        metrics:
          port: *metricsPort

  ingress:
    atuin:
      enabled: true
      className: nginx-internal
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        nginx.ingress.kubernetes.io/proxy-body-size: 1G
      hosts:
        - host: &host atuin.internal.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: atuin
                port: http
      tls:
        - hosts:
            - *host
          secretName: atuin-tls-certificate
    external:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: grigri.cloud
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        nginx.ingress.kubernetes.io/proxy-body-size: 1G
      hosts:
        - host: &host atuin.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: atuin
                port: http
      tls:
        - hosts:
            - *host
          secretName: atuin-external-tls-certificate

  persistence:
    config:
      type: emptyDir

  serviceMonitor:
    app:
      enabled: true
      serviceName: atuin
      labels:
        release: monitoring
      endpoints:
        - port: metrics
          scheme: http
          path: /metrics
          interval: 1m
          scrapeTimeout: 10s

  defaultPodOptions:
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      runAsGroup: 65534
    nodeSelector:
      kubernetes.io/hostname: prusik
