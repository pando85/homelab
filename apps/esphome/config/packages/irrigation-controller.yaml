---
# source: https://devices.esphome.io/devices/ESP32-Relay-X2
esphome:
  name: "${name}"
  name_add_mac_suffix: false
  project:
    name: "${project_name}"
    version: "${project_version}"

esp32:
  board: esp32dev
  flash_size: 4MB

logger:
#  baud_rate: 0

web_server:
  port: 80
  auth:
    username: !secret web_server_username
    password: !secret web_server_password

dashboard_import:
  package_import_url: github://athom-tech/athom-configs/athom-mini-switch.yaml

output:
  - platform: gpio
    pin: GPIO23
    id: output_led

sensor:
  - platform: uptime
    name: "${friendly_name} Uptime"
    disabled_by_default: true

  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    update_interval: 60s

binary_sensor:
  - platform: status
    name: "${friendly_name} Status"

  # Turn on the LED when any relay is on
  - platform: template
    name: "${friendly_name} LED"
    lambda: |-
      return id(relay_1).state || id(relay_2).state;
    on_press:
      then:
        - output.turn_on: output_led
    on_release:
      then:
        - output.turn_off: output_led

sprinkler:
  - id: irrigation_controller
    name: "${friendly_name}"
    main_switch: "Irrigation Controller Cycle Active"
    auto_advance_switch: "Auto Advance"
    multiplier_number:
      name: "Multiplier"
      initial_value: 1
      min_value: 0.1
      max_value: 5
      step: 0.1
    valves:
      - valve_switch: "Zone 1 Active"
        valve_switch_id: relay_1
        enable_switch: "Zone 1 Auto"
        run_duration_number:
          name: "Zone 1 Duration"
          unit_of_measurement: "min"
          initial_value: 8
          min_value: 1
          max_value: 60
          step: 1
          icon: "mdi:timer-outline"
      - valve_switch: "Zone 2 Active"
        valve_switch_id: relay_2
        enable_switch: "Zone 2 Auto"
        run_duration_number:
          name: "Zone 2 Duration"
          unit_of_measurement: "min"
          initial_value: 8
          min_value: 1
          max_value: 60
          step: 1
          icon: "mdi:timer-outline"
    standby_switch: "Manual Mode"

switch:
  - platform: gpio
    pin: GPIO16
    id: relay_1
    name: "${friendly_name} Relay 1"
    restore_mode: RESTORE_DEFAULT_OFF

  - platform: gpio
    pin: GPIO17
    id: relay_2
    name: "${friendly_name} Relay 2"
    restore_mode: RESTORE_DEFAULT_OFF

  # day of week toggle switches
  - platform: template
    id: sunday
    name:  Sunday
    icon: "mdi:calendar-range"
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
  - platform: template
    id: monday
    name:  Monday
    icon: "mdi:calendar-range"
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
  - platform: template
    id: tuesday
    name:  Tuesday
    icon: "mdi:calendar-range"
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
  - platform: template
    id: wednesday
    name:  Wednesday
    icon: "mdi:calendar-range"
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
  - platform: template
    id: thursday
    name:  Thursday
    icon: "mdi:calendar-range"
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
  - platform: template
    id: friday
    name:  Friday
    icon: "mdi:calendar-range"
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
  - platform: template
    id: saturday
    name:  Saturday
    icon: "mdi:calendar-range"
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true

  # schedule switch
  - platform: template
    id: schedule_enabled
    name: Enable Schedule
    icon: "mdi:clock-outline"
    entity_category: config
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true

datetime:
  - platform: template
    name: Schedule Start Time
    entity_category: config
    id: schedule_start_time
    type: time
    optimistic: true
    restore_value: true

time:
  - platform: homeassistant
    id: ha_time
    on_time:
      # Every 1 minute
      - seconds: 0
        minutes: /1
        then:
          - script.execute: check_schedule
    on_time_sync:
      then:
        - logger.log: "Synchronized system clock"

script:
  - id: check_schedule
    then:
      lambda: |-
        int dow = id(ha_time).now().day_of_week;
        if (
          (dow == 1 && id(sunday).state == true) ||
          (dow == 2 && id(monday).state == true) ||
          (dow == 3 && id(tuesday).state == true) ||
          (dow == 4 && id(wednesday).state == true) ||
          (dow == 5 && id(thursday).state == true) ||
          (dow == 6 && id(friday).state == true) ||
          (dow == 7 && id(saturday).state == true)
          ) {
            int hour = id(ha_time).now().hour;
            int minute = id(ha_time).now().minute;
            if (
                (hour == id(schedule_start_time).hour &&
                minute == id(schedule_start_time).minute &&
                id(schedule_enabled).state == true)
                ) {
              id(run_cycle).execute();
            }
        }

  - id: run_cycle
    then:
      - sprinkler.start_full_cycle: irrigation_controller
      - lambda: ESP_LOGI("main", "Sprinkler cycle has begun!");
