app-template:
  controllers:
    telegram-bot:
      labels:
        backup/retain: quaterly
      replicas: 2
      containers:
        telegram-bot:
          image:
            repository: pando85/troll-bot
            tag: 1.0.1

          env:
            BOT_URL: https://telegram.grigri.cloud

          envFrom:
            - secretRef:
                name: telegram-bot-secret

          securityContext:
            runAsUser: 0

          resources:
            requests:
              cpu: 10m
              memory: 4Mi
            limits:
              cpu: 500m
              memory: 32Mi
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
              spec:
                failureThreshold: 30
                periodSeconds: 5

  service:
    telegram-bot:
      controller: telegram-bot
      ports:
        http:
          port: 5000

  ingress:
    telegram-bot:
      enabled: true
      className: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        external-dns.alpha.kubernetes.io/enabled: "true"
      hosts:
        - host: &host telegram.internal.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: telegram-bot
                port: http
      tls:
        - hosts:
            - *host
          secretName: telegram-bot-tls-certificate

    external:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: grigri.cloud
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
      hosts:
        - host: &host telegram.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: telegram-bot
                port: http
      tls:
        - hosts:
            - *host
          secretName: telegram-external-tls-certificate

  defaultPodOptions:
    enableServiceLinks: false

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/instance: telegram-bot
            app.kubernetes.io/name: telegram-bot
