app-template:
  controllers:
    qbittorrent:
      labels:
        backup/retain: quaterly
      replicas: 1
      type: statefulset
      containers:
        qbittorrent:
          image:
            repository: ghcr.io/home-operations/qbittorrent
            tag: 5.1.2@sha256:a724f86a39fa637fc4ff81165585d7273dc9dcd9ca59818a34e9fa9c467dd26c

          env:
            UMASK: "022"
            QBT_TORRENTING_PORT: &torrent_port 50413
            QBT_WEBUI_PORT: &port 8080

          resources:
            requests:
              cpu: 100m
              memory: 800Mi
            limits:
              memory: 3.5Gi

          probes:
            liveness: &probe
              enabled: true
              custom: true
              spec:
                failureThreshold: 3
                periodSeconds: 10
                tcpSocket:
                  port: *port
                timeoutSeconds: 1
            readiness: *probe
        metrics:
          image:
            repository: ghcr.io/esanchezm/prometheus-qbittorrent-exporter
            tag: latest@sha256:951f8dc59759b0c0aec4c28ed98d06660219707a04fa4038e455746ff481f766
          env:
            QBITTORRENT_HOST: localhost
            QBITTORRENT_PORT: *port
          resources:
            requests:
              cpu: 15m
              memory: 32Mi
            limits:
              memory: 100Mi

          ports:
            - name: metrics
              containerPort: &metrics_port 8000
              protocol: TCP

          probes:
            liveness: &metrics_probe
              enabled: true
              custom: true
              spec:
                failureThreshold: 3
                periodSeconds: 30
                tcpSocket:
                  port: *metrics_port
                timeoutSeconds: 1
            readiness: *metrics_probe

  defaultPodOptions:
    securityContext:
      runAsUser: 995
      runAsGroup: 501
      fsGroup: 501
      fsGroupChangePolicy: "OnRootMismatch"

    hostname: qbittorrent

    # uncomment after restore:
    #nodeSelector:
    #  kubernetes.io/hostname: prusik

  service:
    qbittorrent:
      controller: qbittorrent
      ports:
        http:
          port: *port
        metrics:
          port: *metrics_port

    bittorrent:
      controller: qbittorrent
      type: LoadBalancer
      annotations:
        lbipam.cilium.io/ips: "192.168.193.7"
        external-dns.alpha.kubernetes.io/enabled: "true"
      externalTrafficPolicy: Local
      ports:
        bittorrent:
          enabled: true
          port: *torrent_port
          protocol: TCP
          targetPort: *torrent_port

  serviceMonitor:
    qbittorrent:
      enabled: true
      serviceName: qbittorrent
      labels:
        release: monitoring
      endpoints:
        - port: metrics
          scheme: http
          path: /metrics
          interval: 1m
          scrapeTimeout: 30s

  ingress:
    qbittorrent:
      enabled: true
      className: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        external-dns.alpha.kubernetes.io/enabled: "true"
      hosts:
        - host: &host qbittorrent.internal.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: qbittorrent
                port: http
      tls:
        - hosts:
            - *host
          secretName: qbittorrent-tls-certificate

    external:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: grigri.cloud
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        nginx.ingress.kubernetes.io/auth-url: https://auth.grigri.cloud/oauth2/auth?allowed_groups=qbittorrent-users@idm.grigri.cloud
        nginx.ingress.kubernetes.io/auth-signin: https://auth.grigri.cloud/oauth2/start
        nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
      hosts:
        - host: &host qbittorrent.grigri.cloud
          paths:
            - path: /
              service:
                identifier: qbittorrent
                port: http
      tls:
        - hosts:
            - *host
          secretName: qbittorrent-external-tls-certificate

  persistence:
    config:
      enabled: true
      globalMounts:
        - path: /config
      existingClaim: config-qbittorrent

    series:
      enabled: true
      type: hostPath
      hostPath: /datasets/series/download
      globalMounts:
        - path: /datasets/series/download

    peliculas:
      enabled: true
      type: hostPath
      hostPath: /datasets/peliculas/download
      globalMounts:
        - path: /datasets/peliculas/download

    musica:
      enabled: true
      type: hostPath
      hostPath: /datasets/musica/download
      globalMounts:
        - path: /datasets/musica/download
