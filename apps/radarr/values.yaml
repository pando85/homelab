app-template:
  controllers:
    radarr:
      labels:
        backup/retain: quaterly
      type: statefulset
      containers:
        radarr:
          image:
            repository: ghcr.io/onedr0p/radarr-develop
            tag: 5.8.3.8933@sha256:da6094f6cc4dc95af194612a8a4d7db4fc27ff4a6e5748c2e6d5dd7be9ed69a7

          env:
            TZ: Europe/Madrid

          resources:
            requests:
              cpu: 10m
              memory: 180Mi
            limits:
              memory: 400Mi
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
              spec:
                failureThreshold: 30
                periodSeconds: 5

  service:
    radarr:
      controller: radarr
      ports:
        http:
          port: 7878

  ingress:
    radarr:
      enabled: true
      className: nginx-internal
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
      hosts:
        - host: &host radarr.internal.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: radarr
                port: http
      tls:
        - hosts:
            - *host
          secretName: radarr-tls-certificate

    external:
      enabled: true
      className: nginx-external
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: grigri.cloud
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
        nginx.ingress.kubernetes.io/auth-url: https://auth.grigri.cloud/oauth2/auth
        nginx.ingress.kubernetes.io/auth-signin: https://auth.grigri.cloud/oauth2/start
      hosts:
        - host: &host radarr.grigri.cloud
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: radarr
                port: http
      tls:
        - hosts:
            - *host
          secretName: radarr-external-tls-certificate
  defaultPodOptions:
    securityContext:
      runAsUser: 995
      runAsGroup: 501
      fsGroup: 501
      fsGroupChangePolicy: "OnRootMismatch"

    nodeSelector:
      kubernetes.io/hostname: prusik

  persistence:
    config:
      enabled: true
      globalMounts:
        - path: /config
      existingClaim: config-radarr
    peliculas:
      enabled: true
      type: hostPath
      hostPath: /datasets/peliculas
      globalMounts:
        - path: /datasets/peliculas
