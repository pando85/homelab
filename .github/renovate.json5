{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
    ':dependencyDashboard',
    ':preserveSemverRanges',
    ':disableRateLimiting',
  ],
  gitAuthor: 'Renovate <4646670+renovate85-bot[bot]@users.noreply.github.com>',
  forkProcessing: 'enabled',
  rebaseWhen: 'conflicted',
  commitMessagePrefix: '{{parentDir}}: ',
  timezone: 'Europe/Madrid',
  schedule: [
    'after 4am and before 10am on Monday',
  ],
  enabledManagers: [
    'argocd',
    'github-actions',
    'helm-values',
    'helmv3',
    'kustomize',
    'pre-commit',
    'custom.regex',
  ],
  'pre-commit': {
    enabled: true,
    commitMessagePrefix: 'pre-commit: ',
    branchPrefix: 'pre-commit-',
  },
  configMigration: true,
  customManagers: [
    {
      customType: 'regex',
      description: 'Process custom dependencies with double quotes, after colon, URLs and variables',
      fileMatch: [
        '.+\\.ya?ml$',
      ],
      matchStrings: [
        '#\\srenovate: datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?"(?<currentValue>.*)"\n',
        '#\\srenovate: datasource=(?<datasource>\\S+)( versioning=(?<versioning>\\S+))?\n.*?: (?<depName>\\S+):(?<currentValue>.*)\n',
        '#\\srenovate: url-match: datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\\/(?<currentValue>v[0-9]+\\.[0-9]+\\.[0-9]+)\\/.*',
        '#\\srenovate: datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?( extractVersion=(?<extractVersion>\\S+))?\n.*?: (?<currentValue>.*)\n',
      ],
      versioningTemplate: '{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}',
    },
  ],
  packageRules: [
    {
      additionalBranchPrefix: '{{parentDir}}-',
      addLabels: [
        'renovate/{{parentDir}}',
      ],
      matchPackageNames: [
        '/.*/',
      ],
    },
    {
      matchManagers: [
        'github-actions',
      ],
      matchUpdateTypes: [
        'minor',
        'patch',
      ],
      matchCurrentVersion: '!/^0/',
      automerge: true,
      automergeType: 'pr',
      ignoreTests: true,
      platformAutomerge: true,
    },
    {
      matchDatasources: [
        'docker',
      ],
      versioning: 'loose',
      matchPackageNames: [
        '/lidarr/',
        '/prowlarr/',
        '/qbittorrent/',
        '/radarr/',
        '/sonarr/',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchPackageNames: [
        '/lidarr/',
      ],
      automerge: false,
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchPackageNames: [
        'nextcloud',
        'redis',
      ],
      matchUpdateTypes: [
        'major',
      ],
      minimumReleaseAge: '30 days',
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchUpdateTypes: [
        'minor',
        'patch',
      ],
      matchCurrentVersion: '!/^0/',
      automerge: true,
      ignoreTests: true,
      automergeType: 'pr',
      platformAutomerge: true,
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchUpdateTypes: [
        'minor',
      ],
      matchPackageNames: [
        'kanidm',
      ],
      matchCurrentVersion: '!/^0/',
      automerge: false,
      ignoreTests: false,
      platformAutomerge: false,
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchUpdateTypes: [
        'digest',
      ],
      automerge: true,
      ignoreTests: true,
      automergeType: 'pr',
      platformAutomerge: true,
    },
    {
      matchPackageNames: [
        'hashicorp/vault',
        'registry.k8s.io/sig-storage/csi-provisioner',
        'registry.k8s.io/sig-storage/csi-snapshotter',
      ],
      matchManagers: [
        'custom.regex',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
      ],
      minimumReleaseAge: '30 days',
    },
    {
      matchDatasources: [
        'helm',
      ],
      matchUpdateTypes: [
        'minor',
        'patch',
      ],
      matchCurrentVersion: '!/^0/',
      automerge: true,
      automergeType: 'pr',
      ignoreTests: true,
      platformAutomerge: true,
    },
    {
      matchPackageNames: [
        'k3s-io/k3s',
      ],
      matchManagers: [
        'custom.regex',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
      ],
      minimumReleaseAge: '120 days',
      groupName: 'k3s upgrade',
      additionalBranchPrefix: 'k3s-',
      addLabels: [
        'renovate/k3s',
      ],
    },
    {
      description: 'Group k3s changes in one PR',
      matchPackageNames: [
        'k3s-io/k3s',
      ],
      matchManagers: [
        'custom.regex',
      ],
      additionalBranchPrefix: 'k3s-',
      addLabels: [
        'renovate/k3s',
      ],
      groupName: 'k3s upgrade',
      groupSlug: 'k3s-upgrade',
    },
  ],
}
