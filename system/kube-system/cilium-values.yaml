debug:
  enabled: false

k8sServiceHost: "192.168.192.3"
k8sServicePort: "6443"

rollOutCiliumPods: true

serviceAccounts:
  # cert-manager used instead
  clustermeshcertgen:
    create: false
  hubblecertgen:
    create: false

securityContext:
  capabilities:
    ciliumAgent:
      # Use to set socket permission
      - CHOWN
      # Used to terminate envoy child process
      - KILL
      # Used since cilium modifies routing tables, etc...
      - NET_ADMIN
      # Used since cilium creates raw sockets, etc...
      - NET_RAW
      # Used since cilium monitor uses mmap
      - IPC_LOCK
      # Used in iptables. Consider removing once we are iptables-free
      - SYS_MODULE
      # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
      - SYS_RESOURCE
      # it should not be required for Kernel >= 5.8 but
      # it triggers the error `failed to create new netns: operation not permitted` without it
      - SYS_ADMIN
      # Both PERFMON and BPF requires kernel 5.8, container runtime
      # cri-o >= v1.22.0 or containerd >= v1.5.0.
      # If available, SYS_ADMIN can be removed.
      - PERFMON
      - BPF
      # Allow discretionary access control (e.g. required for package installation)
      - DAC_OVERRIDE
      # Allow to set Access Control Lists (ACLs) on arbitrary files (e.g. required for package installation)
      - FOWNER
      # Allow to execute program that changes GID (e.g. required for package installation)
      - SETGID
      # Allow to execute program that changes UID (e.g. required for package installation)
      - SETUID
    # -- Capabilities for the `mount-cgroup` init container
    cleanCiliumState:
      # Most of the capabilities here are the same ones used in the
      # cilium-agent's container because this container can be used to
      # uninstall all Cilium resources, and therefore it is likely that
      # will need the same capabilities.
      # Used since cilium modifies routing tables, etc...
      - NET_ADMIN
      # Used in iptables. Consider removing once we are iptables-free
      - SYS_MODULE
      # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
      - SYS_RESOURCE
      # Both PERFMON and BPF requires kernel 5.8, container runtime
      # cri-o >= v1.22.0 or containerd >= v1.5.0.
      # If available, SYS_ADMIN can be removed.
      - PERFMON
      - BPF

# requires: `routingMode: native` it is setup below
autoDirectNodeRoutes: true

# -- Enable bandwidth manager to optimize TCP and UDP workloads and allow
# for rate-limiting traffic from individual Pods with EDT (Earliest Departure
# Time) through the "kubernetes.io/egress-bandwidth" Pod annotation.
bandwidthManager:
  # -- Enable bandwidth manager infrastructure (also prerequirement for BBR)
  enabled: true
  # -- Activate BBR TCP congestion control for Pods
  bbr: true

bgp:
  enabled: false

bpf:
  masquerade: true

# -- This feature set enables virtual BGP routers to be created via
# CiliumBGPPeeringPolicy CRDs.
bgpControlPlane:
  enabled: true
  secretsNamespace:
    name: kube-system

containerRuntime:
  integration: containerd
  socketPath: /var/run/k3s/containerd/containerd.sock

enableRuntimeDeviceDetection: true

loadBalancer:
  standalone: false
  algorithm: maglev
  # DSR for TCP and SNAT for UDP
  mode: hybrid
  acceleration: best-effort

hubble:
  enabled: true
  metrics:
    enabled:
      - dns:query;ignoreAAAA
      - drop
      - tcp
      - flow
      - icmp
      - http
    serviceMonitor:
      enabled: true
      labels:
        release: monitoring
    dashboards:
      enabled: true
      annotations:
        grafana.grafana.com/dashboards.target-directory: /tmp/dashboards/cilium
      label: grafana_dashboard
  tls:
    enabled: true
    auto:
      enabled: true
      method: certmanager
      certManagerIssuerRef:
        group: cert-manager.io
        kind: ClusterIssuer
        name: internal
  relay:
    enabled: true
    rollOutPods: true
    prometheus:
      enabled: true
      serviceMonitor:
        enabled: true
        labels:
          release: monitoring
  ui:
    enabled: true
    rollOutPods: true
    ingress:
      enabled: true
      className: nginx-internal
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        cert-manager.io/cluster-issuer: letsencrypt-prod-dns
      hosts:
        - &host hubble.internal.grigri.cloud
      tls:
        - secretName: hubble-tls-certificate
          hosts:
            - *host

installNoConntrackIptablesRules: true
kubeProxyReplacement: true
routingMode: native
ipv4NativeRoutingCIDR: "10.0.0.0/8"

prometheus:
  enabled: true
  serviceMonitor:
    enabled: true
    labels:
      release: monitoring
    trustCRDsExist: true
dashboards:
  enabled: true
  label: grafana_dashboard
  annotations:
    grafana.grafana.com/dashboards.target-directory: /tmp/dashboards/cilium

operator:
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      labels:
        release: monitoring
  dashboards:
    enabled: true
    label: grafana_dashboard
    annotations:
      grafana.grafana.com/dashboards.target-directory: /tmp/dashboards/cilium
