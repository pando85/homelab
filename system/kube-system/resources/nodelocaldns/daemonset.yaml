apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: node-local-dns
  name: nodelocaldns
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: node-local-dns
  template:
    metadata:
      labels:
        k8s-app: node-local-dns
      annotations:
        policy.cilium.io/no-track-port: "53"
        prometheus.io/port: "9253"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: node-local-dns
      containers:
        - args:
            - -localip
            - 169.254.25.10
            - -conf
            - /etc/Corefile
            - -upstreamsvc
            - kube-dns-upstream
            - -skipteardown=true
            - -setupinterface=false
            - -setupiptables=false
          # renovate: datasource=docker
          image: registry.k8s.io/dns/k8s-dns-node-cache:1.22.28
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 5
          name: node-cache
          ports:
            - containerPort: 53
              hostPort: 53
              name: dns
              protocol: UDP
            - containerPort: 53
              hostPort: 53
              name: dns-tcp
              protocol: TCP
            - containerPort: 9253
              hostPort: 9253
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 25m
              memory: 5Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/coredns
              name: config-volume
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 0
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: Corefile
                path: Corefile.base
            name: nodelocaldns
          name: config-volume
