apiVersion: kaniop.rs/v1beta1
kind: Kanidm
metadata:
  name: kanidm
spec:
  domain: idm.grigri.cloud
  replicaGroups:
    - name: default
      replicas: 1
      role: read_only_replica
      primaryNode: false
      resources:
        requests:
          cpu: 10m
          memory: 90Mi
        limits:
          memory: 2Gi
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              kanidm.kaniop.rs/cluster: kanidm
              kanidm.kaniop.rs/replica-group: default
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule

  # List of external replication nodes. This is used to configure replication between
  # different Kanidm clusters.
  #
  # **WARNING**: `admin` and `idm_admin` passwords are going to be reset.
  externalReplicationNodes:
    # Name of the external replication node. This just have internal use.
    - name: kanidm-deployed
      hostname: kanidm-kanidmd
      port: 8444
      certificate:
        key: tls.der.b64url
        name: kanidm-0-certificate
      # Defines the type of replication to use. Defaults to MutualPull.
      #
      # Valid options:
      # - mutual-pull: Both nodes can initiate replication with each other (default)
      # - allow-pull: This node allows the external node to pull changes, but won't initiate
      # - pull: This node will pull changes from the external node
      type: pull
      # Select external replication node as the primary node. This means that if database conflicts
      # occur the content of the primary will take precedence over the rest of the nodes.
      # Note: just one external replication node or replication group can be selected as primary.
      # Defaults to false.
      automaticRefresh: true

  image: kanidm/server:1.7.3
  logLevel: info

  env:
    - name: KANIDM_TRUST_X_FORWARD_FOR
      value: "true"
    - name: KANIDM_DB_FS_TYPE
      value: "zfs"
    - name: KANIDM_ONLINE_BACKUP_SCHEDULE
      value: "00 2 * * *"
    - name: KANIDM_ONLINE_BACKUP_VERSIONS
      value: "1"
  # Namespaces to match for KanidmOAuth2Clients discovery.
  #
  # An empty label selector matches all namespaces.
  # A null label selector (default value) matches the current namespace only.
  oauth2ClientNamespaceSelector: {}
  # Namespaces to match for KanidmGroups discovery.
  #
  # An empty label selector matches all namespaces.
  # A null label selector (default value) matches the current namespace only.
  groupNamespaceSelector: {}
  # Namespaces to match for KanidmPersonAccounts discovery.
  #
  # An empty label selector matches all namespaces.
  # A null label selector (default value) matches the current namespace only.
  personNamespaceSelector: {}
  storage:
    volumeClaimTemplate:
      metadata:
        labels:
          app.kubernetes.io/instance: kanidm
          app.kubernetes.io/name: kanidm
          backup: kanidm-zfs
          backup/retain: quaterly
        annotations:
          argocd.argoproj.io/sync-options: Prune=false
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Mi

  ldapPortName: ldaps

  ingress:
    annotations:
      external-dns.alpha.kubernetes.io/enabled: "true"
      external-dns.alpha.kubernetes.io/target: grigri.cloud
      cert-manager.io/cluster-issuer: letsencrypt-prod-dns
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      # Enable source IP-based load balancing for consistent routing
      nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    ingressClassName: nginx-external
    tlsSecretName: idm-external-tls-certificate
    extraTlsHosts:
      - ldaps.idm.internal.grigri.cloud

  securityContext:
    runAsUser: 389
    runAsGroup: 389
    fsGroup: 389
    fsGroupChangePolicy: "OnRootMismatch"
